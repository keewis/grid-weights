name: Build wheels

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false

      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            manylinux: auto
          # TODO: gcc can't find a suitable -lgcc on 32-bit linux
          # - runner: ubuntu-latest
          #   target: x86
          #   manylinux: auto
          # TODO: figure out how to get a cross-compiled libproj
          # - runner: ubuntu-latest
          #   target: aarch64
          #   manylinux: auto
          # - runner: ubuntu-latest
          #   target: armv7
          #   manylinux: auto
          # - runner: ubuntu-latest
          #   target: s390x
          #   manylinux: auto
          # - runner: ubuntu-latest
          #   target: ppc64le
          #   manylinux: auto
    steps:
      - uses: actions/checkout@v5

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"
          manylinux: ${{ matrix.manylinux }}
          before-script-linux: |
            sudo apt-get update
            sudo apt-get install -y libproj-dev pkg-config

            export PKG_CONFIG_ALLOW_CROSS=1
            pkg-config --list-all

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    # TODO: figure out how to get libproj for `musllinux`
    if: false
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false

      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v5

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"
          manylinux: musllinux_1_2
          before-script-linux: |
            sudo apt-get update
            sudo apt-get install -y libproj-dev pkg-config

            export PKG_CONFIG_ALLOW_CROSS=1
            pkg-config --list-all

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    # TODO: figure out how to install libproj on windows
    if: false
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false

      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v5

      - name: check installed libs
        run: |
          pkg-config --list-all

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v5

      - name: check installed libs
        run: |
          pkg-config --list-all

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i 3.10 -i 3.11 -i 3.12 -i 3.13
          sccache: "true"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  # sdist:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: Build sdist
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         command: sdist
  #         args: --out dist
  #     - name: Upload sdist
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-sdist
  #         path: dist

  release:
    runs-on: ubuntu-latest
    name: Release
    environment:
      name: pypi
      url: https://pypi.org/p/grid-weights
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      # contents: write
      # Used to generate artifact attestation
      attestations: write
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - linux
      # - musllinux
      # - windows
      - macos
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "wheels-*"
          path: dist
          merge-multiple: true
      - name: Show downloaded files
        shell: bash
        run: ls -lR
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*.whl"
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
